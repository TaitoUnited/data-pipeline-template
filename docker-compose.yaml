# This file is used to run your application locally with Docker Compose

version: '3.8'
services:
  data-pipeline-template-ingress:
    container_name: data-pipeline-template-ingress
    image: nginx:stable-alpine
    restart: unless-stopped
    networks:
      - default
    ports:
      - "127.0.0.1:9999:80"
    volumes:
      - "./docker-nginx.conf:/etc/nginx/nginx.conf:delegated"

  # "IMPLEMENTATION"

  data-pipeline-template-server:
    container_name: data-pipeline-template-server
    build:
      context: ./server
      dockerfile: ${dockerfile}
    restart: unless-stopped
    networks:
      - default
    ports:
      - '8080'
      - "127.0.0.1:4229:9229"
    volumes:
      - "./server:/develop:delegated"
    tty: true
    secrets:
      - API_KEY
      - API_KEY_ETL
    environment:
      MODE: any  # api, worker, any
      # Paths and bind
      BASE_PATH: /api
      API_PORT: 8080
      API_BINDADDR: 0.0.0.0
      COMMON_PUBLIC_PORT: 9999
      CORS_ORIGINS: https://example1.com,https://example2.com
      # Common variables
      COMMON_COMPANY: companyname
      COMMON_PROJECT: full-stack-template
      COMMON_DEBUG: 'false'
      COMMON_LOG_FORMAT: text
      COMMON_LOG_LEVEL: info      # trace, debug, info, warn, error, fatal
      COMMON_ENV: local
      # Services
      SENTRY_DSN: #sentryDSN
      DATABASE_HOST: data-pipeline-template-database
      DATABASE_PORT: ${db_database_port}
      DATABASE_NAME: ${db_database_name}
      DATABASE_USER: ${db_database_app_username}
      DATABASE_PASSWORD: ${taito_default_password} # TODO: use secrets
      DATABASE_POOL_MIN: '1'
      DATABASE_POOL_MAX: '10'
      DATABASE_SSL_ENABLED: "${db_database_ssl_enabled}"
      DATABASE_SSL_CLIENT_CERT_ENABLED: "${db_database_ssl_client_cert_enabled}"
      DATABASE_SSL_SERVER_CERT_ENABLED: "${db_database_ssl_server_cert_enabled}"
      STORAGE_TYPE: s3
      STORAGE_ENDPOINT: data-pipeline-template-storage:9000
      STORAGE_ACCESS_KEY: minio
      STORAGE_SECRET_KEY: ${taito_default_password} # TODO: use secrets
      STORAGE_BUCKET: bucket

  # "LAB: Jupyter Lab"

  data-pipeline-template-lab:
    container_name: data-pipeline-template-lab
    build:
      context: ./lab
      dockerfile: ${dockerfile}
    restart: unless-stopped
    networks:
      - default
    ports:
      - "8888"
    volumes:
      - "./lab/common:/home/jovyan/common:delegated"
      - "./lab/lessons:/home/jovyan/lessons:delegated"
      - "./lab/work:/home/jovyan/work:delegated"
    environment:
      JUPYTER_OPTIONS: --LabApp.token='' # Disables authentication
      COMMON_URL: http://localhost:8029
      DATABASE_HOST: data-pipeline-template-database
      DATABASE_PORT: ${db_database_port}
      DATABASE_NAME: ${db_database_name}
      DATABASE_USER: ${db_database_app_username}
      DATABASE_PASSWORD: ${taito_default_password} # TODO: use secrets
      STORAGE_TYPE: s3
      STORAGE_ENDPOINT: data-pipeline-template-storage:9000
      STORAGE_ACCESS_KEY: minio
      STORAGE_SECRET_KEY: ${taito_default_password} # TODO: use secrets
      STORAGE_BUCKET: bucket

  # "BI: Superset BI"

  data-pipeline-template-bi:
    container_name: data-pipeline-template-bi
    build:
      context: ./bi
      dockerfile: ${dockerfile}
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    restart: unless-stopped
    networks:
      - default
    depends_on:
      - data-pipeline-template-database
    ports:
      - 8080
    secrets:
      - DATABASE_PASSWORD
    environment:
      DATABASE_DIALECT: postgresql+psycopg2
      DATABASE_HOST: data-pipeline-template-database
      DATABASE_PORT: ${db_bidb_port}
      DATABASE_DB: ${db_bidb_name}
      DATABASE_USER: ${db_bidb_app_username}
      REDIS_HOST: data-pipeline-template-redis
      REDIS_PORT: 6379

  data-pipeline-template-biinit:
    container_name: data-pipeline-template-biinit
    build:
      context: ./bi
      dockerfile: ${dockerfile}
    command: ["/app/docker/docker-init.sh"]
    networks:
      - default
    depends_on:
      - data-pipeline-template-database
    environment:
      SUPERSET_LOAD_EXAMPLES: 'yes' # Set to 'yes' or 'no'
      DATABASE_DIALECT: postgresql+psycopg2
      DATABASE_HOST: data-pipeline-template-database
      DATABASE_PORT: ${db_bidb_port}
      DATABASE_DB: ${db_bidb_name}
      DATABASE_USER: ${db_bidb_app_username}
      DATABASE_PASSWORD: ${taito_default_password}
      REDIS_HOST: data-pipeline-template-redis
      REDIS_PORT: 6379

  data-pipeline-template-biworker:
    container_name: data-pipeline-template-biworker
    build:
      context: ./bi
      dockerfile: ${dockerfile}
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    restart: unless-stopped
    networks:
      - default
    depends_on:
      - data-pipeline-template-database
    environment:
      DATABASE_DIALECT: postgresql+psycopg2
      DATABASE_HOST: data-pipeline-template-database
      DATABASE_PORT: ${db_bidb_port}
      DATABASE_DB: ${db_bidb_name}
      DATABASE_USER: ${db_bidb_app_username}
      DATABASE_PASSWORD: ${taito_default_password}
      REDIS_HOST: data-pipeline-template-redis
      REDIS_PORT: 6379

  data-pipeline-template-bibeat:
    container_name: data-pipeline-template-bibeat
    build:
      context: ./bi
      dockerfile: ${dockerfile}
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    restart: unless-stopped
    user: "root"
    networks:
      - default
    depends_on:
      - data-pipeline-template-database
    environment:
      DATABASE_DIALECT: postgresql+psycopg2
      DATABASE_HOST: data-pipeline-template-database
      DATABASE_PORT: ${db_bidb_port}
      DATABASE_DB: ${db_bidb_name}
      DATABASE_USER: ${db_bidb_app_username}
      DATABASE_PASSWORD: ${taito_default_password}
      REDIS_HOST: data-pipeline-template-redis
      REDIS_PORT: 6379

  # "DATA RESOURCES"

  data-pipeline-template-redis:
    container_name: data-pipeline-template-redis
    image: bitnami/redis:6.0
    restart: unless-stopped
    networks:
      - default
    ports:
      - "6379"
    environment:
      ALLOW_EMPTY_PASSWORD: 'yes'
      REDIS_AOF_ENABLED: 'no'

  data-pipeline-template-database:
    container_name: data-pipeline-template-database
    image: postgres:12
    restart: unless-stopped
    networks:
      - default
    ports:
      - "127.0.0.1:5432:5432"
    secrets:
      - DATABASE_PASSWORD
      - BIDB_DATABASE_PASSWORD
    environment:
      POSTGRES_DB: ${db_database_name}
      POSTGRES_USER: ${db_database_app_username}
      POSTGRES_PASSWORD_FILE: /run/secrets/DATABASE_PASSWORD
      BIDB_DB: ${db_bidb_name}
      BIDB_USER: ${db_bidb_app_username}
      BIDB_PASSWORD_FILE: /run/secrets/BIDB_DATABASE_PASSWORD
    volumes:
      - "./database:/docker-entrypoint-initdb.d:delegated"

  data-pipeline-template-storage:
    container_name: data-pipeline-template-storage
    image: minio/minio
    restart: unless-stopped
    command: server /develop --console-address ":8888"
    working_dir: /develop
    networks:
      - default
    ports:
      - "9000"
      - "8888:8888"
    volumes:
      - "./storage:/develop:delegated"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: ${taito_default_password}
      # Subpath not yet supported: https://github.com/minio/minio/issues/12727
      # MINIO_BROWSER_REDIRECT_URL: http://localhost:9999/minio

secrets:
  DATABASE_PASSWORD:
    file: ./secrets/${taito_env}/${db_database_app_secret}
  BIDB_DATABASE_PASSWORD:
    file: ./secrets/${taito_env}/${db_bidb_app_secret}
  API_KEY:
    file: ./secrets/${taito_env}/${taito_project}-${taito_env}-api.apiKey
  API_KEY_ETL:
    file: ./secrets/${taito_env}/${taito_project}-${taito_env}-api.apiKeyEtl

networks:
  default:
