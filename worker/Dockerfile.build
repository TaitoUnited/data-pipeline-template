# Builder and tester container for production build
FROM python:3.9 as builder

# Install python dependencies
RUN apt-get -y update && apt-get -y install \
  build-essential \
  libffi-dev \
  python3-dev \
  libssl-dev \
  cargo

RUN mkdir -p /develop
WORKDIR /develop

ARG SERVICE_DIR=.
COPY ${SERVICE_DIR} /develop
RUN pip3 install --upgrade pip && pip3 install -r /develop/requirements-dev.txt

RUN flake8
RUN mypy --ignore-missing-imports src
# TODO: RUN pytest src # Run unit tests


# Production runtime container
FROM python:3.9
# FOR SPARK: FROM bitnami/spark:3

ARG BUILD_VERSION=1.0.0
ENV BUILD_VERSION ${BUILD_VERSION}
ENV PYTHON_ENV production

LABEL version=${BUILD_VERSION} \
      company=companyname \
      project=data-pipeline-template \
      role=server

# Install python dependencies
RUN apt-get -y update && apt-get -y install \
  build-essential \
  libffi-dev \
  python3-dev \
  libssl-dev \
  cargo

RUN mkdir -p /service
WORKDIR /service
ENV PYTHONPATH /service

# FOR SPARK:
# COPY --from=builder /develop/spark-libs.sh .
# RUN /tmp/spark-libs.sh

COPY --from=builder /develop/requirements-prod.txt .
RUN pip3 install --upgrade pip && \
    pip3 install -r requirements-prod.txt
# TODO: remove apt-get all build packages (build-essential, libffi-dev, ...)

COPY --from=builder /develop/execute .
COPY --from=builder /develop/src ./src

# Create app user
RUN if ! id -u 1001 &> /dev/null; then groupadd --gid 1001 app && useradd --uid 1001 --gid 1001 app; fi
USER 1001

CMD python3 src/server.py
